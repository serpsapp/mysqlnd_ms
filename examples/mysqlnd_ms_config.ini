; PECL/mysqlnd_ms is configured via its own config file. The config file must be
; readable by PHP. It can have any file name. PECL/mysqlnd_ms will read the
; config file, if you a) load PECL/mysqlnd_ms into PHP, b) enable PECL/mysqlnd_ms and
; c) tell it what config file to use.
;
;  a) load PECL/mysqlnd_ms extension - php.ini - extension=mysqlnd_ms.so
;  b) enable PECL/mysqlnd_ms - php.ini - mysqlnd_ms.enabled=1
;  c) set config file - php.ini - mysqlnd_ms.
;
; The config file syntax minics the PHP configuration file (php.ini) syntax.
;
; The config file consists of one or more sections each describing a
; MySQL master/slave setup.
;
; [section_name]
; master[] = one_and_only_master[:port_or_socket]
; slave[] = first_slave[:port_or_socket]
; slave[] = second_slave[:port_or_socket]
; pick[] = [random|random_once|roundrobin|user]
; lazy_connections=[1|on|true]
;
; Whenever a PHP application connects to MySQL using any of the mysql, mysqli or
; PDO_MYSQL the plugin checks if the host name passed to the connect function does
; match a section name. If so, the plugin reads the section settings and starts
; to apply R/W split and load balancing to the connection handle:
;
;  mysqli_connect("section_name", ...) -> will use [section_name] settings
;
;     vs.
;
;  mysqli_connect("192.168.2.1", ...)  -> no matching section, no magic, no change
;
; PECL/mysqlnd_ms supports only one MySQL replication master although array/list-like
; syntax is used for the "master[]" config keyword:
;
;  master[] = one_and_only_master[:port_or_socket]
;
; The "master[]" and "slave[]" keywords can be used to set the host name and,
; optionally, either the port or the socket to use for connecting to the MySQL
; server. PECL/mysqlnd_ms will use the user name and password you have provided
; through mysql, mysqli or PDO_MYSQL API calls when connecting. Master and
; slave server must be configured to use the same user name and password.
;
; PECL/mysqlnd_ms can handle multiple MySQL replication slaves configured via
; the "slave[]" config keyword:
;
; slave[] = first_slave[:port_or_socket]
; slave[] = second_slave[:port_or_socket]
; slave[] = as_many_slaves_as_you_want[:port_or_socket]
;
; The default slave load balancing policy is round-robin. Read requests will
; be distributed in round-robin fashion over all configured slaves. The first
; read will go to the first slave listed in the config file.
;
; Alternative load balancing policies can be configured using the "pick[]" keyword.
; If no "pick[]" keyword is found, round-robin will be used.
;
; If multiple load balancing policies are configured, PECL/mysqlnd_ms first
; tried to apply the first one before trying next. This is only useful with "user"
; load balancing policy.
;
; pick[] = [random|random_once|roundrobin|user]
;
; random      - Random selection of slave for every query
; random_once - Select random slave at request start (recommended!)
; round_robin - Round-robin: iterate over slaves starting with first
; user        - user defined, see tests/
;
; The keyword "lazy_connections" controls when PECL/mysqlnd_ms openes master and
; slave connections. By default it will open connections to the master and
; all configured slaves, if you connect to MySQL through mysql, mysqli or PDO_MYSQL
; and the hostname matches a section name. You can disable this by setting:
;
;  lazy_connections=[1|on|true]
;
;
; It is recommended that you deploy PECL/mysqlnd_ms by deploying the config file.
; If your MySQL master/slave setup changes, for example, because you add more
; slaves, you are requested to add the additional slaves to the config file and
; deploy the updated config file.

[examples_section]
master[] = localhost
slave[] = localhost
pick[] = random_once
lazy_connections=1